<Page
    x:Class="FluentStore.Views.CollectionView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:FluentStore.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewmodels="using:FluentStore.ViewModels"
    xmlns:converters="using:FluentStore.Converters"
    xmlns:controls="using:FluentStore.Controls"
    xmlns:winui="using:Microsoft.UI.Xaml.Controls"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:tkconverters="using:Microsoft.Toolkit.Uwp.UI.Converters"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    x:DefaultBindMode="OneWay">
    <Page.Resources>
        <tkconverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <tkconverters:CollectionVisibilityConverter x:Key="CollectionVisibilityConverter"/>
        <converters:PlatWindowsEnumToVisibility x:Key="PlatWindowsEnumToVisibility"/>
        <converters:CSSColorToBrushConverter x:Name="CSSColorToBrushConverter"/>
    </Page.Resources>

    <interactivity:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="Loaded">
            <core:InvokeCommandAction Command="{x:Bind ViewModel.LoadItemsCommand}"/>
        </core:EventTriggerBehavior>
    </interactivity:Interaction.Behaviors>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <ScrollViewer x:Name="ContentScroller">
            <StackPanel Spacing="20">
                <Grid Padding="20" ColumnSpacing="20" Margin="20,20,20,0" MaxHeight="300"
                      Background="{ThemeResource SystemControlAcrylicElementMediumHighBrush}"
                      x:Name="InfoCard" CornerRadius="4">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition x:Name="DescriptionRow" Height="4*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Viewbox MaxWidth="{Binding RelativeSource={RelativeSource Mode=Self}, Path=MaxHeight}" MaxHeight="100"
                             Margin="0,20,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <TextBlock Text="{x:Bind ViewModel.Collection.TileGlyph}" TextLineBounds="Tight"
                                   TextWrapping="NoWrap" FontSize="24" FontWeight="Bold" Padding="12"
                                   d:Text="FS"/>
                    </Viewbox>
                    <TextBlock Grid.Column="1" Text="{x:Bind ViewModel.Collection.Name}"
                               VerticalAlignment="Center" FontSize="30" FontWeight="Bold" TextTrimming="CharacterEllipsis"
                               d:Text="Fluent Store Test Collection"/>
                    <StackPanel Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Center" Orientation="Horizontal" Spacing="10">
                        <!--<TextBlock Text="{x:Bind ViewModel.Product.DisplayPrice, Mode=OneWay}" VerticalAlignment="Center"
                                       FontSize="16" FontWeight="SemiBold"/>-->
                        <Button Click="AddToCollection_Click" Padding="10" Background="{ThemeResource SystemChromeAltHighColor}">
                            <StackPanel Orientation="Horizontal" Spacing="10">
                                <FontIcon Glyph="&#xE74D;" />
                                <TextBlock Text="Delete" />
                            </StackPanel>
                        </Button>
                        <SplitButton x:Name="InstallButton" Padding="10,11" Click="InstallButton_Click" CornerRadius="2"
                                     BorderThickness="0">
                            <StackPanel Orientation="Horizontal" Spacing="10">
                                <FontIcon Glyph="&#xECAA;" />
                                <TextBlock Text="Install" x:Name="InstallButtonText" />
                            </StackPanel>
                            <SplitButton.Flyout>
                                <MenuFlyout Placement="BottomEdgeAlignedRight">
                                    <MenuFlyoutItem Icon="Download" Text="Download installer" ToolTipService.ToolTip="Downloads the app without installing it"
                                                    x:Name="DownloadMenuItem" Click="Download_Click"/>
                                    <MenuFlyoutItem Text="Install with App Installer" ToolTipService.ToolTip="Installs the app using Microsoft's App Installer"
                                                    x:Name="InstallUsingAppInstallerMenuItem" Click="InstallUsingAppInstaller_Click">
                                        <MenuFlyoutItem.Icon>
                                            <BitmapIcon UriSource="Assets/AppPackageAppList.png"/>
                                        </MenuFlyoutItem.Icon>
                                    </MenuFlyoutItem>
                                </MenuFlyout>
                            </SplitButton.Flyout>
                            <SplitButton.Resources>
                                <StaticResource x:Key="SplitButtonBackground" ResourceKey="AccentBackground" />
                                <StaticResource x:Key="SplitButtonBackgroundPointerOver" ResourceKey="AccentBackgroundPointerOver" />
                                <StaticResource x:Key="SplitButtonBackgroundPressed" ResourceKey="AccentBackgroundPressed" />
                                <StaticResource x:Key="SplitButtonBackgroundDisabled" ResourceKey="AccentBackgroundDisabled" />
                                <StaticResource x:Key="SplitButtonBackgroundChecked" ResourceKey="SystemAccentColorLight2" />
                                <StaticResource x:Key="SplitButtonBackgroundCheckedPointerOver" ResourceKey="SystemControlHighlightAccentBrush" />
                                <StaticResource x:Key="SplitButtonBackgroundCheckedPressed" ResourceKey="SystemControlHighlightBaseMediumLowBrush" />
                                <StaticResource x:Key="SplitButtonBackgroundCheckedDisabled" ResourceKey="SystemControlBackgroundBaseLowBrush" />

                                <StaticResource x:Key="SplitButtonForeground" ResourceKey="AccentForeground" />
                                <StaticResource x:Key="SplitButtonForegroundPointerOver" ResourceKey="AccentForegroundPointerOver" />
                                <StaticResource x:Key="SplitButtonForegroundPressed" ResourceKey="AccentForegroundPressed" />
                                <StaticResource x:Key="SplitButtonForegroundDisabled" ResourceKey="AccentForegroundDisabled" />
                                <StaticResource x:Key="SplitButtonForegroundChecked" ResourceKey="SystemControlHighlightAltChromeWhiteBrush" />
                                <StaticResource x:Key="SplitButtonForegroundCheckedPointerOver" ResourceKey="SystemControlHighlightAltChromeWhiteBrush" />
                                <StaticResource x:Key="SplitButtonForegroundCheckedPressed" ResourceKey="SystemControlHighlightAltChromeWhiteBrush" />
                                <StaticResource x:Key="SplitButtonForegroundCheckedDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />

                                <StaticResource x:Key="SplitButtonBorderBrush" ResourceKey="AccentBorderBrush" />
                                <StaticResource x:Key="SplitButtonBorderBrushPointerOver" ResourceKey="AccentBorderBrushPointerOver" />
                                <StaticResource x:Key="SplitButtonBorderBrushPressed" ResourceKey="AccentBorderBrushPressed" />
                                <StaticResource x:Key="SplitButtonBorderBrushDisabled" ResourceKey="AccentBorderBrushDisabled" />
                                <StaticResource x:Key="SplitButtonBorderBrushChecked" ResourceKey="SystemControlHighlightAltTransparentBrush" />
                                <StaticResource x:Key="SplitButtonBorderBrushCheckedPointerOver" ResourceKey="SystemControlHighlightBaseMediumLowBrush" />
                                <StaticResource x:Key="SplitButtonBorderBrushCheckedPressed" ResourceKey="SystemControlHighlightAltTransparentBrush" />
                                <StaticResource x:Key="SplitButtonBorderBrushCheckedDisabled" ResourceKey="SystemControlDisabledTransparentBrush" />
                            </SplitButton.Resources>
                        </SplitButton>
                    </StackPanel>
                    <TextBlock x:Name="DescriptionBlock" Grid.Row="1" Grid.Column="1" FontSize="16" Margin="0,-12,0,0"
                               Foreground="{ThemeResource SystemBaseMediumHighColor}" Grid.ColumnSpan="2"
                               Text="{x:Bind ViewModel.Collection.Description}" d:Text="This is just a test collection for Fluent Store"
                               TextTrimming="WordEllipsis" TextWrapping="Wrap" />
                    <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" Spacing="10" Grid.ColumnSpan="2">
                        <TextBlock VerticalAlignment="Center" Text="{x:Bind ViewModel.AuthorName, Mode=OneWay}"
                                   d:Text="YoshiAsk"/>
                        <Ellipse Width="3" Height="3" VerticalAlignment="Center" Fill="{ThemeResource SystemBaseHighColor}"
                                 StrokeThickness="0" Visibility="{x:Bind ViewModel.Collection.IsPrivate, Converter={StaticResource BoolToVisibilityConverter}}" />
                        <FontIcon Glyph="&#xE72E;" Visibility="{x:Bind ViewModel.Collection.IsPrivate, Converter={StaticResource BoolToVisibilityConverter}}" />
                        <TextBlock Text="Private" Visibility="{x:Bind ViewModel.Collection.IsPrivate, Converter={StaticResource BoolToVisibilityConverter}}" />
                    </StackPanel>
                    <HyperlinkButton x:Name="MoreButton" Grid.Row="2" Grid.Column="2" HorizontalAlignment="Right"
                                     Click="MoreButton_Click" Content="More" RelativePanel.Below="DescriptionBlock"
                                     Visibility="{Binding ElementName=DescriptionBlock, Path=IsTextTrimmed}" />
                </Grid>
                <GridView ItemsSource="{x:Bind ViewModel.Items, Mode=OneWay}" SelectionMode="Single"
                          SelectedItem="{x:Bind ViewModel.SelectedItem, Mode=TwoWay}" Padding="10"
                          controls:ListViewBehaviour.FillBeforeWrap="True" controls:ListViewBehaviour.MinItemWidth="150">
                    <GridView.ItemContainerStyle>
                        <Style TargetType="GridViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Stretch" />
                        </Style>
                    </GridView.ItemContainerStyle>
                    <GridView.ItemTemplate>
                        <DataTemplate x:DataType="viewmodels:ProductDetailsViewModel">
                            <Grid MaxHeight="300" Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="150"/>
                                    <RowDefinition Height="150"/>
                                </Grid.RowDefinitions>
                                <Rectangle Fill="{x:Bind AppIcon.BackgroundColor, Converter={StaticResource CSSColorToBrushConverter}}"/>
                                <toolkit:ImageEx CacheMode="BitmapCache">
                                    <toolkit:ImageEx.Source>
                                        <BitmapImage UriSource="{x:Bind AppIcon.Uri}"/>
                                    </toolkit:ImageEx.Source>
                                </toolkit:ImageEx>
                                <Grid Grid.Row="1" Padding="10">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <StackPanel Spacing="5" Grid.Row="0">
                                        <TextBlock Text="{x:Bind Product.Title}" FontWeight="SemiBold"
                                                   TextWrapping="Wrap" TextTrimming="CharacterEllipsis" MaxLines="2"/>
                                        <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" Spacing="10">
                                            <TextBlock Text="{x:Bind Product.RatingCount, Mode=OneWay}" FontSize="14" VerticalAlignment="Center"/>
                                            <Viewbox Width="90" Margin="0,0,0,-5">
                                                <winui:RatingControl Value="{Binding Product.AverageRating, Mode=OneWay}" IsReadOnly="True">
                                                    <winui:RatingControl.Resources>
                                                        <SolidColorBrush x:Key="RatingControlSelectedForeground" Color="{ThemeResource SystemColorHighlightTextColor}"/>
                                                    </winui:RatingControl.Resources>
                                                </winui:RatingControl>
                                            </Viewbox>
                                        </StackPanel>
                                        <TextBlock Text="{x:Bind Product.AvailableDevicesDisplayText, Mode=OneWay}" FontFamily="Segoe MDL2 Assets"/>
                                    </StackPanel>
                                    <TextBlock Grid.Row="1" Text="{x:Bind Product.DisplayPrice, Mode=OneWay}" VerticalAlignment="Bottom"/>
                                </Grid>
                            </Grid>
                        </DataTemplate>
                    </GridView.ItemTemplate>

                    <GridView.Transitions>
                        <TransitionCollection>
                            <RepositionThemeTransition/>
                        </TransitionCollection>
                    </GridView.Transitions>
                    <GridView.ItemContainerTransitions>
                        <TransitionCollection>
                            <AddDeleteThemeTransition/>
                            <PopupThemeTransition/>
                        </TransitionCollection>
                    </GridView.ItemContainerTransitions>

                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="SelectionChanged">
                            <core:InvokeCommandAction Command="{x:Bind ViewModel.ViewItemCommand}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </GridView>
            </StackPanel>
        </ScrollViewer>

        <CommandBar Grid.Row="1" DefaultLabelPosition="Right">
            <AppBarButton Icon="Edit" Label="Edit details" Click="EditButton_Click"/>
        </CommandBar>
        
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource CompactModeMinWidth}" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>

</Page>
